name: Build and deploy Azure Web App
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
  
jobs:
    build_web_app:
      name: ðŸ§ª Build Web App
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301
          
      - name: Configure App Settings
        uses: cschleiden/replace-tokens@v1
        with: 
          files: '["Tailspin.SpaceGame.Web/appsettings.json"]'
        env:
          LEADERBOARD_API_URL: https://${{env.API_APP_NAME}}.azurewebsites.net/api/Leaderboard
        
      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./Tailspin.SpaceGame.Web
        
      - name: Build
        run: dotnet build --no-restore
        working-directory: ./Tailspin.SpaceGame.Web
      
      - name: Publish
        run: dotnet publish --no-restore -c Release
        working-directory: ./Tailspin.SpaceGame.Web
      
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          name: spacegameweb
          path: ./Tailspin.SpaceGame.Web/bin/Release/netcoreapp3.1/publish/
    
    dependency-review:
     uses: ./.github/workflows/dependencycheck.yml
     if: github.event_name == 'pull_request'
     needs: [build_web_app]
    
    code-ql-check:
     uses: ./.github/workflows/codeql.yml
     needs: [build_web_app]
    
    deploytodev:
      name: Deploy to Dev
      runs-on: ubuntu-latest
      environment: Development
      needs: [build_web_app,code-ql-check]

      steps:
        - name: Download artifact from build job
          uses: actions/download-artifact@v3
          with:
            name: spacegameweb

        - name: Azure WebApp
          uses: Azure/webapps-deploy@v2
          with:
            app-name: space-game1
            package: . 
            publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
    
    deploytoprod:
      name: Deploy To Production
      runs-on: ubuntu-latest
      environment: Production
      needs: [deploytodev]

      steps:
        - name: Download artifact from build job
          uses: actions/download-artifact@v3
          with:
            name: spacegameweb

